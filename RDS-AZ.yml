AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation RDS Template
  Ce template permet la création d'une base RDS aurora-mysql en noeud Replica/lecteur multi AZ
  
  
Parameters:
#On entre ici les differents parametres de configuration tels que les identifiants de connexion.

    DatabaseName:
      Default: MyDatabase
      Description: Nom de la base de données
      Type: String
      MinLength: '1'
      MaxLength: '64'
      AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
      ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

    DatabaseInstanceType:
        Default: db.t2.medium
        AllowedValues:
            - db.t2.small
            - db.t2.medium
            - db.r4.large
            - db.r4.xlarge
            - db.r4.2xlarge
            - db.r4.4xlarge
            - db.r4.8xlarge
            - db.r4.16xlarge
        Description: "Type d'instance pour la base de données. Pricing: https://aws.amazon.com/rds/aurora/pricing/"
        Type: String
    
    DatabasePassword:
        AllowedPattern: "[a-zA-Z0-9]+"
        ConstraintDescription: must contain only alphanumeric characters. Must have length 8-41.
        Description: Mot de passe du compte admin. (Choose a secure password)
        MaxLength: '41'
        MinLength: '8'
        NoEcho: 'true'
        Type: String
    
    DatabaseUsername:
        Default: "wordpress"
        AllowedPattern: "[a-zA-Z0-9]+"
        ConstraintDescription: must contain only alphanumeric characters. Must have length 1-16
        Description: Nom du compte administrateur.
        MaxLength: '16'
        MinLength: '1'
        Type: String
    EC2VPC:  
      Type: AWS::EC2::VPC::Id  
      Description: Select a VPC for database 
    
    EC2Subnet:  
      Type: AWS::EC2::Subnet::Id  
      Description: Select a second subnet for database 
    
    EC2Subnet2:  
      Type: AWS::EC2::Subnet::Id  
      Description: Select a first subnet for database  
    
    DatabaseSecurityGroup:  
      Type:  AWS::EC2::SecurityGroup::Id 
      Description: Select a security-group to launch database Instance
      
Metadata:
    AWS::CloudFormation::Interface:
        ParameterGroups:
            - Label:
                default: Database Configuration
              Parameters:
                - DatabaseInstanceType
                - DatabaseName
                - DatabaseUsername
                - DatabasePassword
        ParameterLabels:
            DatabaseName:
              default: Database name
            DatabaseInstanceType:
                default: Database Instance Type
            DatabasePassword:
                default: Database Password
            DatabaseUsername:
                default: Database Username

Resources:
            
#On declare quel sous reseau aura accès aux bases de données
    DatabaseSubnetGroup:
        Type: AWS::RDS::DBSubnetGroup
        Properties:
            DBSubnetGroupDescription: CloudFormation managed DB subnet group.
            SubnetIds:
                - !Ref EC2Subnet
                - !Ref EC2Subnet2

    ParameterGroup:
        Type: "AWS::RDS::DBParameterGroup"
        Properties: 
            Description: Wordpress DB parameter group 
            Family: aurora-mysql5.7
            Parameters:
                max_connections: 300
                
#Création du cluster
    DatabaseCluster:
        Type: AWS::RDS::DBCluster
        Properties:
            Engine: aurora-mysql
            MasterUsername:
              Ref: DatabaseUsername
            DatabaseName:
              Ref: DatabaseName
            MasterUserPassword:
              Ref: DatabasePassword
            BackupRetentionPeriod: 35
            PreferredBackupWindow: 02:00-03:00
            PreferredMaintenanceWindow: mon:03:00-mon:04:00
            DBSubnetGroupName:
              Ref: DatabaseSubnetGroup
            VpcSecurityGroupIds:
              - Ref: DatabaseSecurityGroup
            DBClusterParameterGroupName: default.aurora-mysql5.7
        
            
#Création des 2 instances RDS
    DatabaseInstance:
        Type: AWS::RDS::DBInstance
        Properties:
            Engine: aurora-mysql
            DBClusterIdentifier:
                Ref: DatabaseCluster
            DBInstanceClass:
                Ref: DatabaseInstanceType
            DBSubnetGroupName:
                Ref: DatabaseSubnetGroup    
            DBParameterGroupName: !Ref ParameterGroup
            PubliclyAccessible: "false"
            DBInstanceIdentifier: !Ref DatabaseName
            
    DatabaseSecondInstance:
        Type: AWS::RDS::DBInstance
        DependsOn: 
          - DatabaseInstance
        Properties:
            Engine: aurora-mysql
            DBClusterIdentifier:
                Ref: DatabaseCluster
            DBInstanceClass:
                Ref: DatabaseInstanceType
            DBSubnetGroupName:
                Ref: DatabaseSubnetGroup    
            DBParameterGroupName: !Ref ParameterGroup
            PubliclyAccessible: "false"
            DBInstanceIdentifier: Database2
            
Outputs:
    DatabaseEndpoint: 
        Description: The database endpoint
        Value: !GetAtt DatabaseCluster.Endpoint.Address
    
    DatabasePort:
        Description: The database port
        Value: !GetAtt DatabaseCluster.Endpoint.Port